openapi: 3.0.0
info:
  title: DeepBounty API
  version: 1.0.0
  description: DeepBounty API Documentation

components:
  securitySchemes:
    sessionCookie:
      type: apiKey
      in: cookie
      name: connect.sid

paths:
  #Setup
  /setup/password:
    post:
      summary: Set up a password to protect the dashboard
      tags:
        - Setup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  minLength: 12
                  pattern: "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).+$"
      responses:
        "200":
          description: Password setup successful
          headers:
            Set-Cookie:
              description: Session cookie when the password is set up
              schema:
                type: string
              example: "connect.sid=abc123; Path=/; HttpOnly; SameSite=Lax; Secure"
        "400":
          description: Invalid password
  #Auth
  /auth/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          headers:
            Set-Cookie:
              description: Session cookie set on successful login
              schema:
                type: string
              example: "connect.sid=abc123; Path=/; HttpOnly; SameSite=Lax; Secure"
        "401":
          description: Invalid password
  /auth/logout:
    post:
      summary: User logout
      tags:
        - Auth
      responses:
        "200":
          description: Logout successful
  /auth/info:
    get:
      summary: Get current authentication info
      tags:
        - Auth
      responses:
        "200":
          description: Authentication status
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
                    description: Current auth status. Depends on whether setup is complete and whether a valid session cookie is present.
                    enum: [authenticated, unauthenticated, setup-required]
  #Targets
  /targets:
    get:
      summary: Retrieve a list of targets
      tags:
        - Targets
      security:
        - sessionCookie: []
      responses:
        "200":
          description: A list of targets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Target Name"
                    domain:
                      type: string
                      example: "example.com"
                    activeScan:
                      type: boolean
                      example: true
        "401":
          description: Unauthorized
    post:
      summary: Add a new target
      tags:
        - Targets
      security:
        - sessionCookie: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - domain
              properties:
                name:
                  type: string
                  example: "New Target"
                domain:
                  type: string
                  example: "example.com"
                activeScan:
                  type: boolean
                  example: true
      responses:
        "201":
          description: Target created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: "New Target"
                  domain:
                    type: string
                    example: "example.com"
                  activeScan:
                    type: boolean
                    example: true
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
  /targets/full:
    get:
      summary: Retrieve all targets with their subdomains and settings
      tags:
        - Targets
      security:
        - sessionCookie: []
      responses:
        "200":
          description: A list of targets with relations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Target Name"
                    domain:
                      type: string
                      example: "example.com"
                    activeScan:
                      type: boolean
                      example: true
                    subdomains:
                      type: array
                      items:
                        type: string
                      example: ["a.example.com", "b.example.com"]
                    settings:
                      type: object
                      nullable: true
                      description: Arbitrary JSON settings for the target
        "401":
          description: Unauthorized
  /targets/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Target ID
    patch:
      summary: Update an existing target
      tags:
        - Targets
      security:
        - sessionCookie: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Target"
                domain:
                  type: string
                  example: "example.com"
                activeScan:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Target updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Updated Target"
                  domain:
                    type: string
                    example: "example.com"
                  activeScan:
                    type: boolean
                    example: true
        "400":
          description: Invalid request
        "404":
          description: Target not found
        "401":
          description: Unauthorized
    delete:
      summary: Delete an existing target
      tags:
        - Targets
      security:
        - sessionCookie: []
      responses:
        "200":
          description: Target deleted successfully
        "404":
          description: Target not found
        "401":
          description: Unauthorized
  /targets/subdomains/{targetId}:
    parameters:
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
        description: Target ID
    get:
      summary: Get subdomains for a target
      tags:
        - Targets
      security:
        - sessionCookie: []
      responses:
        "200":
          description: A list of subdomains for the target
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: "sub.example.com"
        "401":
          description: Unauthorized
    post:
      summary: Add subdomains to a target
      tags:
        - Targets
      security:
        - sessionCookie: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: "sub.example.com"
      responses:
        "200":
          description: Subdomains added successfully
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
  /targets/settings/{targetId}:
    parameters:
      - name: targetId
        in: path
        required: true
        schema:
          type: integer
        description: Target ID
    get:
      summary: Get settings for a target
      tags:
        - Targets
      security:
        - sessionCookie: []
      responses:
        "200":
          description: Settings rows for the target
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                example: { userAgent: "Mozilla/5.0", customHeader: "X-BugBounty: <username>" }

        "401":
          description: Unauthorized
    post:
      summary: Replace settings for a target
      tags:
        - Targets
      security:
        - sessionCookie: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              example: { userAgent: "Mozilla/5.0", customHeader: "X-BugBounty: <username>" }
      responses:
        "200":
          description: Settings saved successfully
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
  # Alerts
  /alerts:
    get:
      summary: Retrieve a list of alerts
      tags:
        - Alerts
      security:
        - sessionCookie: []
      responses:
        "200":
          description: A list of alerts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    targetName:
                      type: string
                    domain:
                      type: string
                    subdomain:
                      type: string
                    score:
                      type: integer
                      description: Severity score (0 = informational, 1 = low, 2 = medium, 3 = high, 4 = critical)
                    confirmed:
                      type: boolean
                    description:
                      type: string
                    endpoint:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
        "401":
          description: Unauthorized
    post:
      summary: Create a new alert
      tags:
        - Alerts
      security:
        - sessionCookie: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targetId
                - name
                - subdomain
                - score
                - description
                - endpoint
              properties:
                targetId:
                  type: integer
                name:
                  type: string
                subdomain:
                  type: string
                score:
                  type: integer
                  minimum: 0
                  maximum: 4
                confirmed:
                  type: boolean
                  default: false
                description:
                  type: string
                endpoint:
                  type: string
      responses:
        "201":
          description: Alert created successfully
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
  /alerts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Alert ID
    delete:
      summary: Delete an alert
      tags:
        - Alerts
      security:
        - sessionCookie: []
      responses:
        "200":
          description: Alert deleted successfully
        "404":
          description: Alert not found
        "401":
          description: Unauthorized
  /modules:
    get:
      summary: Retrieve a list of loaded modules
      tags:
        - Modules
      security:
        - sessionCookie: []
      responses:
        "200":
          description: A list of loaded modules
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "module-1"
                    name:
                      type: string
                      example: "Module One"
                    version:
                      type: string
                      example: "1.0.0"
                    description:
                      type: string
                      example: "This is a sample module."
